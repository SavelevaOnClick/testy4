1.Что такое рекурсия и почему она потенциально может забить стек вызовов?
Рекурсия это когда функция вызывает сама себя. Код может выполнится только попав в стек, наш стек рабоатет по
принципу первыя зашёл последним вышел. Размеры стека не безграничны, он может быть перегружен.
Если не поставить условие при котором функция перестанет вызывать сама себя то стек переполнится что приведёт к ошибке
Забить рекурсия может по той причине что первая функция не вышла со стека а осталась в нём ведь
она ещё не завершила работу, она вызвала саму себя тем самым создав новый констекст вызова и сверху попадая в стек 
Если таких вызовов будет достаточно чтоб заполнить размер стека то он переполнится ведь функция входит со стека
только завершив полностью свою работу.
2. Что такое сбалансированное бинарное дерево? Как проводиться поиск по дереву,
 удаление элемента и добавления нового элемента? Все относится к сбалансированным деревьям
Сбалансированное дерево это если разница между левой и правой часть не превышают один элемент
Поиск осуществляется также как и в обычном дереве сравнивая искомый элемент с нодой
если значение меньше переходя влевое поддерево а если больше в правое

Для вставки первоначально также спускаемся по ноде чтоб найти куда нужно вставить элемент.(сравнивая если больше идём вправо если меньше идём влево)
Затем нужно сравнить сестринские эелменты чтоб проверить баланс дерева
если он остсутствует то нужно его сбалансировать повернув развернув узел

При удалении элемента в начале также находим нужный нам эелмент спускаясь вниз по ноде,
затем если он не имеет потомков удаляем и проверяем его на разницу в высоте с сестринским(проверить
сбалансированное или нет если нет то проводим балансировку разворачивая узел)

если потомок есть один то сдвигаем только его и также само проверяем на баланс

если у удаляемого элемента есть оба потомка и левый и правый 
то мы ищём самый минимальный элемент по правому узлу удаляего элемента
помещаем его вместо удаляемого и проверяем берево на баланс
если он был нарушен то разворачиваем узел в зависимости от разницы